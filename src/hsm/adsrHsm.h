//$file${.::adsrHsm.h} #######################################################
//
// Model: adsrHsm.qm
// File:  ${.::adsrHsm.h}
//
// This code has been generated by QM 4.3.0 (https://www.state-machine.com/qm).
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// This program is open source software: you can redistribute it and/or
// modify it under the terms of the GNU General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
// for more details.
//
//$endhead${.::adsrHsm.h} ####################################################
#ifndef adsr_hsm_h
#define adsr_hsm_h

namespace ADSRHSM {

enum AdsrSignals { // signals used in the ADSR
    TIME_TICK_SIG = QP::Q_USER_SIG, // published from tick ISR
    NOTE_ON,            // A MIDI note on message is received
    NOTE_OFF,           // A MIDI note off message is received
    ATTACK_END,         // The attach level reaches its maximum
    DECAY_END,          // The decay level reaches its minimum
    RELEASE_END,        // The release level reaches its minimum

    MAX_SIG,             // the last signal (keep always last)
};


} // namespace ADSRHSM

//$declare${Events::noteOnEvt} ###############################################
namespace ADSRHSM {

//${Events::noteOnEvt} .......................................................
class noteOnEvt : public QP::QEvt {};

} // namespace ADSRHSM
//$enddecl${Events::noteOnEvt} ###############################################
//$declare${Events::noteOffEvt} ##############################################
namespace ADSRHSM {

//${Events::noteOffEvt} ......................................................
class noteOffEvt : public QP::QEvt {};

} // namespace ADSRHSM
//$enddecl${Events::noteOffEvt} ##############################################

// opaque pointers to active objects in the application
//$declare${AOs::AO_Adsr} ####################################################
namespace ADSRHSM {

extern QP::QActive *const AO_Adsr;

} // namespace ADSRHSM
//$enddecl${AOs::AO_Adsr} ####################################################

#endif // adsr_hsm_h